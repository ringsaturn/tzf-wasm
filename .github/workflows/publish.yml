name: Preview and publish

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out sources
        uses: actions/checkout@v5

      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Set up wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: latest

      - name: Build shared artifacts
        run: |
          wasm-pack build --release --target web
          rm -rf dist
          mkdir dist
          cp preview/index.html dist/index.html
          cp -r pkg dist/pkg

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: wasm-dist
          path: dist
          if-no-files-found: error

  preview:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Check out sources
        uses: actions/checkout@v5

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: wasm-dist
          path: .

      - name: Prepare dist directory
        run: mv wasm-dist dist

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload preview artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

      - name: Deploy preview
        id: deploy
        uses: actions/deploy-pages@v4

  publish_npm:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out sources
        uses: actions/checkout@v5

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: wasm-dist
          path: .

      - name: Prepare dist directory
        run: mv wasm-dist dist

      - name: Verify tag matches package version
        run: |
          PKG_VERSION=$(jq -r '.version' dist/pkg/package.json)
          TAG_VERSION=${GITHUB_REF_NAME#v}
          if [ "$PKG_VERSION" != "$TAG_VERSION" ]; then
            echo "Package version ${PKG_VERSION} does not match tag ${GITHUB_REF_NAME}." >&2
            exit 1
          fi

      - name: Export npm token
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [ -z "$NPM_TOKEN" ]; then
            echo "NPM_TOKEN secret is required to publish." >&2
            exit 1
          fi
          echo "NODE_AUTH_TOKEN=$NPM_TOKEN" >> "$GITHUB_ENV"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      - name: Publish to npm
        working-directory: dist/pkg
        run: npm publish --access public
